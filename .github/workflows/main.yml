# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pwd
          ls
          pip install -r requirements.txt
          python setup.py install --user
          cd tests/
          export CUDA_VISIBLE_DEVICES=-1

          # Cleanup environment
          rm -rf $HOME/.easynlp_modelzoo
          rm -rf $HOME/.cache/huggingface

          export MKL_THREADING_LAYER=GNU

          echo "================== Test user defined vectorization =================="
          # check vectorization
          sh run_vectorization.sh

          # Install easynlp cli
          cd ../
          pip uninstall easynlp -y
          python setup.py install
          cd tests/

          if [ ! -d ./tmp ]; then
            mkdir tmp/
          fi

          rm -rf *.tsv *.csv *.txt

          # echo "================== Test DKPLM =================="
          # if [ ! -f ./train_corpus.txt ]; then
          #   wget http://atp-modelzoo-sh.oss-cn-shanghai.aliyuncs.com/release/tutorials/language_modeling/dkplm/train_corpus.txt
          #   wget http://atp-modelzoo-sh.oss-cn-shanghai.aliyuncs.com/release/tutorials/language_modeling/dkplm/dev_corpus.txt
          #   wget http://atp-modelzoo-sh.oss-cn-shanghai.aliyuncs.com/release/tutorials/language_modeling/dkplm/entity_emb.txt
          #   wget http://atp-modelzoo-sh.oss-cn-shanghai.aliyuncs.com/release/tutorials/language_modeling/dkplm/rel_emb.txt
          # fi
          # python test_dkplm_language_modeling.py
          # rm -rf *.txt

          echo "================== Test TorchACC =================="
          python test_torchacc.py
          rm -rf *.tsv

          echo "================== Feature Vectorization =================="
          if [ ! -f ./dev2.tsv ]; then
            wget http://atp-modelzoo-sh.oss-cn-shanghai.aliyuncs.com/release/tutorials/classification/dev2.tsv
          fi

          python test_vectorization.py
          rm -rf *.tsv
